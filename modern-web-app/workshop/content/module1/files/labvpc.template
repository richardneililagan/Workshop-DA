{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lab VPC Template",
  "Parameters": {
    "KeyName": {
			"Type": "AWS::EC2::KeyPair::KeyName",
			"Description": "Keyname for the keypair for the jumphost"
    },
    "VPCCIDR": {
      "Description": "CIDR Block for VPC",
      "Type": "String",
      "Default": "10.20.0.0/16",
      "AllowedValues": ["10.20.0.0/16"]
    },
    "PublicSubnet1Param": {
      "Description": "Public Subnet 1",
      "Type": "String",
      "Default": "10.20.10.0/24",
      "AllowedValues": ["10.20.10.0/24"]
    },
    "PublicSubnet2Param": {
      "Description": "Public Subnet 2",
      "Type": "String",
      "Default": "10.20.15.0/24",
      "AllowedValues": ["10.20.15.0/24"]
    },
    "PrivateSubnet1Param": {
      "Description": "Private Subnet 1",
      "Type": "String",
      "Default": "10.20.50.0/24",
      "AllowedValues": ["10.20.50.0/24"]
    },
    "PrivateSubnet2Param": {
      "Description": "Private Subnet 2",
      "Type": "String",
      "Default": "10.20.55.0/24",
      "AllowedValues": ["10.20.55.0/24"]
    }
  },
  "Mappings": {
    "AmazonLinuxAMI": {
      "us-east-1": {
        "AMI": "ami-1ecae776"
      },
      "us-west-1": {
        "AMI": "ami-d114f295"
      },
      "us-west-2": {
        "AMI": "ami-e7527ed7"
      },
      "eu-west-1": {
        "AMI": "ami-a10897d6"
      },
     "eu-central-1": {
        "AMI": "ami-a8221fb5"
      },
      "sa-east-1": {
        "AMI": "ami-b52890a8"
      },
      "ap-southeast-1": {
        "AMI": "ami-68d8e93a"
      },
      "ap-southeast-2": {
        "AMI": "ami-fd9cecc7"
      },
      "ap-northeast-1": {
        "AMI": "ami-cbf90ecb"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VPCCIDR"
        },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Lab VPC"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": "VPC"
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": ["VPC", "InternetGateway"],
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "InternetGatewayId": {"Ref": "InternetGateway"}
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "CidrBlock": {"Ref": "PublicSubnet1Param"},
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet 1"
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "CidrBlock": {"Ref": "PublicSubnet2Param"},
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet 2"
          }
        ]
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "CidrBlock": {"Ref": "PrivateSubnet1Param"},
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet 1"
          }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "CidrBlock": {"Ref": "PrivateSubnet2Param"},
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet 2"
          }
        ]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": ["VPC", "AttachGateway"],
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": ["PublicRouteTable", "AttachGateway"],
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {"Ref": "InternetGateway"}
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": ["PublicRouteTable", "PublicSubnet1", "AttachGateway"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet1"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": ["PublicRouteTable", "PublicSubnet2"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet2"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private"
          }
        ]
      }
    },
    "PrivateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": ["PublicRouteTable", "PrivateSubnet1", "AttachGateway"],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet1"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
    "PrivateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": ["PublicRouteTable", "PrivateSubnet2", "AttachGateway"],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet2"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
    "NATInstance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": ["AttachGateway", "PublicRoute", "PublicSubnet1", "PublicSubnet2"],
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AmazonLinuxAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": "t2.micro",
        "NetworkInterfaces": [
          {
            "DeviceIndex": "0",
            "AssociatePublicIpAddress": "true",
            "SubnetId": {
              "Ref": "PublicSubnet1"
            },
            "GroupSet": [{"Ref": "NATSecurityGroup"}]
          }
        ],
        "SourceDestCheck": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NAT"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                "yum -y update",
                "yum install -y mysql",
                "echo 1 > /proc/sys/net/ipv4/ip_forward",
                "echo 0 > /proc/sys/net/ipv4/conf/eth0/send_redirects",
                "/sbin/iptables -t nat -A POSTROUTING -o eth0 -s 0.0.0.0/0 -j MASQUERADE",
                "/sbin/iptables-save > /etc/sysconfig/iptables",
                "mkdir -p /etc/sysctl.d/",
                "cat <<EOF > /etc/sysctl.d/nat.conf",
                "net.ipv4.ip_forward = 1",
                "net.ipv4.conf.eth0.send_redirects = 0",
                "EOF \n"
              ]
            ]
          }
        }
      }
    },
    "NATSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "AttachGateway",
      "Properties": {
        "GroupDescription": "Enable internal access to the NAT device",
        "VpcId": {"Ref": "VPC"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "1024",
            "CidrIp": {
              "Ref": "PrivateSubnet1Param"
            }
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "1024",
            "CidrIp": {
              "Ref": "PrivateSubnet1Param"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "1024",
            "CidrIp": {
              "Ref": "PrivateSubnet2Param"
            }
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "1024",
            "CidrIp": {
              "Ref": "PrivateSubnet2Param"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "PrivateRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": ["NATInstance", "PrivateRouteTable"],
      "Properties": {
        "RouteTableId": {"Ref": "PrivateRouteTable"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {"Ref": "NATInstance"}
      }
    },
		"dbsubnetgroup": {
			"Type": "AWS::RDS::DBSubnetGroup",
			"DependsOn": ["PrivateSubnet1", "PrivateSubnet2"],
			"Properties": {
				"DBSubnetGroupDescription": "Lab DB Subnet Group",
				"SubnetIds": [{
					"Ref": "PrivateSubnet1"
				}, {
					"Ref": "PrivateSubnet2"
				}]
			}
		},
		"labdbinstance": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"DBName": "travelbuddy",
				"AllocatedStorage": "5",
				"DBInstanceClass": "db.t2.medium",
				"Engine": "MySQL",
				"MasterUsername": "root",
				"MasterUserPassword": "labpassword",
				"MultiAZ": "false",
				"DBSubnetGroupName": {
					"Ref": "dbsubnetgroup"
				},
				"VPCSecurityGroups": [{
					"Ref": "DBSecurityGroup"
				}],
				"Tags": [{
					"Key": "Name",
					"Value": "MySQL Lab DB Instance"
				}]
			}
		},
		"DBSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": ["VPC"],
			"Properties": {
				"GroupDescription": "DB Instance Security Group",
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "DBSecurityGroup"
				}],
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "3306",
					"ToPort": "3306",
          "CidrIp": {"Ref": "VPCCIDR"}
				}]
			}
		},
		"JumphostSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "VPC",
			"Properties": {
				"GroupDescription": "Enable HTTP access",
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "JumphostSecurityGroup"
				}],
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "tcp",
					"FromPort": "3306",
					"ToPort": "3306",
					"CidrIp": "0.0.0.0/0"
				}]
			}
		},
		"JumphostInstance": {
			"Type": "AWS::EC2::Instance",
			"DependsOn": ["VPC", "JumphostSecurityGroup", "PublicSubnet2", "PublicRoute", "NATInstance", "labdbinstance"],
			"Properties": {
				"ImageId": {
          "Fn::FindInMap": [
            "AmazonLinuxAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
				"KeyName": {
					"Ref": "KeyName"
				},
				"InstanceType": "t2.small",
				"NetworkInterfaces": [{
					"DeviceIndex": "0",
					"AssociatePublicIpAddress": "true",
					"SubnetId": {
						"Ref": "PublicSubnet2"
					},
					"GroupSet": [{
						"Ref": "JumphostSecurityGroup"
					}]
				}],
				"SourceDestCheck": "true",
				"Tags": [{
					"Key": "Name",
					"Value": "Jumphost"
				}],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum -y update\n",
                "yum install -y mysql\n",
                "RDS=$(TMP=$(nslookup ",{"Fn::GetAtt" : [ "labdbinstance" , "Endpoint.Address" ]},") && echo $TMP | awk '{print $10}')\n",
                "echo 1 > /proc/sys/net/ipv4/ip_forward\n",
                "/sbin/iptables -A FORWARD -p tcp -i eth0 --dport 3306 -j ACCEPT\n",
                "/sbin/iptables -t nat -A PREROUTING -p tcp -i eth0  --dport 3306 -j DNAT --to-destination ${RDS}:3306\n",
                "/sbin/iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n",
                "/sbin/iptables-save > /etc/sysconfig/iptables\n",
                "sysctrl -w net.ipv4.ip_forward=1\n"
              ]
            ]
          }
        }
			}
		}
  },
  "Outputs":{
    "JumphostIPAddress":{
      "Value":{"Fn::GetAtt" : [ "JumphostInstance" , "PublicIp" ]},
      "Description":"Public IP address for your Jumphost"
    },
    "RDSInstanceAddress":{
      "Value":{"Fn::GetAtt" : [ "labdbinstance" , "Endpoint.Address" ]},
      "Description":"The DNS name for your RDS instance"
    }
  }
}
